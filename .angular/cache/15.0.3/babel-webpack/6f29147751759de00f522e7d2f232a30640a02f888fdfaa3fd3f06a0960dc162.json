{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction ContactFormComponent_div_9_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 18);\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactFormComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ContactFormComponent_div_9_small_1_Template, 2, 0, \"small\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.contactForm.get(\"name\").errors == null ? null : ctx_r0.contactForm.get(\"name\").errors[\"required\"]);\n  }\n}\nfunction ContactFormComponent_div_15_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 20);\n    i0.ɵɵtext(1, \"Email address is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactFormComponent_div_15_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 20);\n    i0.ɵɵtext(1, \"Email address is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactFormComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ContactFormComponent_div_15_small_1_Template, 2, 0, \"small\", 19);\n    i0.ɵɵtemplate(2, ContactFormComponent_div_15_small_2_Template, 2, 0, \"small\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.contactForm.get(\"email\").errors == null ? null : ctx_r1.contactForm.get(\"email\").errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.contactForm.get(\"email\").errors == null ? null : ctx_r1.contactForm.get(\"email\").errors[\"email\"]);\n  }\n}\nfunction ContactFormComponent_div_21_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 20);\n    i0.ɵɵtext(1, \"Phone Number is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactFormComponent_div_21_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Please, Enter 10 digit Phone Number.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactFormComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ContactFormComponent_div_21_small_1_Template, 2, 0, \"small\", 19);\n    i0.ɵɵtemplate(2, ContactFormComponent_div_21_div_2_Template, 2, 0, \"div\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.contactForm.get(\"phone\").errors == null ? null : ctx_r2.contactForm.get(\"phone\").errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.contactForm.get(\"phone\").errors == null ? null : ctx_r2.contactForm.get(\"phone\").errors[\"pattern\"]);\n  }\n}\nexport class ContactFormComponent {\n  constructor() {\n    this.emailValidation = true;\n    this.phoneValidation = true;\n    this.contactdetails = {\n      name: '',\n      email: '',\n      phone: '',\n      company: '',\n      business: ''\n    };\n  }\n  ngOnInit() {\n    this.contactForm = new FormGroup({\n      name: new FormControl(this.contactdetails.name, [Validators.required, Validators.minLength(4)]),\n      email: new FormControl(this.contactdetails.email, [Validators.required, Validators.minLength(3), Validators.minLength(64)]),\n      phone: new FormControl(this.contactdetails.phone, [Validators.required, Validators.minLength(10), Validators.minLength(12)]),\n      company: new FormControl(this.contactdetails.company, [Validators.required, Validators.minLength(3), Validators.minLength(50)]),\n      business: new FormControl(this.contactdetails.business, [Validators.required, Validators.minLength(3), Validators.minLength(50)])\n    });\n  }\n  get name() {\n    return this.contactForm.get('name');\n  }\n  get phone() {\n    return this.contactForm.get('phone');\n  }\n  get email() {\n    return this.contactForm.get('email');\n  }\n  get company() {\n    return this.contactForm.get('company');\n  }\n  get business() {\n    return this.contactForm.get('business');\n  }\n  onSubmit() {\n    console.log('Submitted!');\n  }\n}\nContactFormComponent.ɵfac = function ContactFormComponent_Factory(t) {\n  return new (t || ContactFormComponent)();\n};\nContactFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ContactFormComponent,\n  selectors: [[\"app-contact-form\"]],\n  decls: 32,\n  vars: 10,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"container\"], [1, \"row\"], [1, \"col-sm\"], [\"for\", \"name\", 1, \"required\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\"], [4, \"ngIf\"], [\"for\", \"email\", 1, \"required\"], [\"type\", \"text\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"email\"], [1, \"col-25\"], [\"for\", \"phone\", 1, \"required\"], [\"type\", \"text\", \"formControlName\", \"phone\", \"name\", \"phone\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"company\", 1, \"required\"], [\"type\", \"text\", \"formControlName\", \"company\", \"name\", \"company\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"business\", 1, \"required\"], [\"type\", \"text\", \"formControlName\", \"business\", \"name\", \"business\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"submitButton\", 3, \"disabled\", \"click\"], [\"class\", \"alert\", 4, \"ngIf\"], [1, \"alert\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"text-danger\"]],\n  template: function ContactFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ContactFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"h1\");\n      i0.ɵɵtext(3, \"How can we help?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵtemplate(9, ContactFormComponent_div_9_Template, 2, 1, \"div\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 2)(11, \"div\", 3)(12, \"label\", 7);\n      i0.ɵɵtext(13, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 8);\n      i0.ɵɵtemplate(15, ContactFormComponent_div_15_Template, 3, 2, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 9)(17, \"label\", 10);\n      i0.ɵɵtext(18, \" Phone:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(19, \"div\", 9);\n      i0.ɵɵelement(20, \"input\", 11);\n      i0.ɵɵtemplate(21, ContactFormComponent_div_21_Template, 3, 2, \"div\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 2)(23, \"label\", 12);\n      i0.ɵɵtext(24, \"Company Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"div\", 2)(27, \"label\", 14);\n      i0.ɵɵtext(28, \"Type of Business:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"input\", 15);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(30, \"button\", 16);\n      i0.ɵɵlistener(\"click\", function ContactFormComponent_Template_button_click_30_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(31, \"GET IN TOUCH\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.contactForm);\n      i0.ɵɵadvance(8);\n      i0.ɵɵclassProp(\"is-invalid\", ctx.contactForm.get(\"name\").invalid && ctx.contactForm.get(\"name\").touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.contactForm.get(\"name\").invalid && ctx.contactForm.get(\"name\").touched || ctx.contactForm.get(\"name\").dirty);\n      i0.ɵɵadvance(5);\n      i0.ɵɵclassProp(\"is-invalid\", ctx.contactForm.get(\"email\").invalid && ctx.contactForm.get(\"email\").touched);\n      i0.ɵɵproperty(\"email\", ctx.emailValidation);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.contactForm.get(\"email\").invalid && ctx.contactForm.get(\"email\").touched || ctx.contactForm.get(\"email\").dirty);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.contactForm.get(\"phone\").invalid && ctx.contactForm.get(\"phone\").touched || ctx.contactForm.get(\"phone\").dirty);\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"disabled\", !ctx.contactForm.valid);\n    }\n  },\n  dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.EmailValidator, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\".container[_ngcontent-%COMP%] {\\n  font-family: arial;\\n  font-size: 24px;\\n  text-align: center;\\n  margin: 10px;\\n  border-radius: 5px;\\n  background-color: #f2f2f2;\\n  padding: 20px;\\n}\\n\\np[_ngcontent-%COMP%] {\\n  text-align: left;\\n}\\n\\n.required[_ngcontent-%COMP%]:after {\\n  content: \\\" *\\\";\\n  color: red;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n  font-family: Georgia, \\\"Times New Roman\\\", Times, serif;\\n  font-size: 18px;\\n  color: #333;\\n  height: 20px;\\n  text-align: left;\\n  clear: both;\\n  float: left;\\n  margin-right: 15px;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  font-family: Georgia, \\\"Times New Roman\\\", Times, serif;\\n  font-size: 18px;\\n  height: 20px;\\n  border: 1px solid #000;\\n  float: left;\\n  margin-bottom: 10px;\\n}\\n\\ninput[type=text][_ngcontent-%COMP%] {\\n  box-sizing: border-box;\\n  padding: 0.5rem;\\n  margin-bottom: 30px;\\n  width: 50%;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  border: 0;\\n}\\n\\n.formSections[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n  margin-bottom: 30px;\\n}\\n\\n.submitButton[_ngcontent-%COMP%] {\\n  background-color: #1976d2; \\n  border: none;\\n  color: white;\\n  padding: 15px 32px;\\n  text-align: center;\\n  text-decoration: none;\\n  display: inline-block;\\n  font-size: 16px;\\n  margin-top: 20px;\\n}\\n\\n.col-25[_ngcontent-%COMP%] {\\n  float: left;\\n  width: 25%;\\n  margin-top: 6px;\\n}\\n\\n.col-75[_ngcontent-%COMP%] {\\n  float: left;\\n  width: 75%;\\n  margin-top: 6px;\\n}\\n\\n\\n.row[_ngcontent-%COMP%]:after {\\n  content: \\\"\\\";\\n  display: table;\\n  clear: both;\\n  margin-bottom: 10px;\\n}\\n/*# sourceURL=webpack://./src/app/components/contact-form/contact-form.component.scss */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9jb250YWN0LWZvcm0vY29udGFjdC1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0Usa0JBQUE7RUFDQSxlQUFBO0VBQ0Esa0JBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSx5QkFBQTtFQUNBLGFBQUE7QUFBRjs7QUFHQTtFQUNFLGdCQUFBO0FBQUY7O0FBR0E7RUFDSSxhQUFBO0VBQ0EsVUFBQTtBQUFKOztBQUVBO0VBQ0kscURBQUE7RUFDQSxlQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxnQkFBQTtFQUNBLFdBQUE7RUFDQSxXQUFBO0VBQ0Esa0JBQUE7QUFDSjs7QUFDQTtFQUNJLHFEQUFBO0VBQ0EsZUFBQTtFQUNBLFlBQUE7RUFDQSxzQkFBQTtFQUNBLFdBQUE7RUFDQSxtQkFBQTtBQUVKOztBQUVBO0VBQ0Usc0JBQUE7RUFDQSxlQUFBO0VBQ0EsbUJBQUE7RUFDQSxVQUFBO0FBQ0Y7O0FBQ0E7RUFDSSxTQUFBO0FBRUo7O0FBQUE7RUFDSSxnQkFBQTtFQUNBLG1CQUFBO0FBR0o7O0FBREE7RUFDRSx5QkFBQSxFQUFBLFVBQUE7RUFDQSxZQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxxQkFBQTtFQUNBLHFCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0FBSUY7O0FBRkE7RUFDRSxXQUFBO0VBQ0EsVUFBQTtFQUNBLGVBQUE7QUFLRjs7QUFGQTtFQUNFLFdBQUE7RUFDQSxVQUFBO0VBQ0EsZUFBQTtBQUtGOztBQUZBLG1DQUFBO0FBQ0E7RUFDRSxXQUFBO0VBQ0EsY0FBQTtFQUNBLFdBQUE7RUFDQSxtQkFBQTtBQUtGIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gIGZvbnQtZmFtaWx5OiBhcmlhbDtcbiAgZm9udC1zaXplOiAyNHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbjogMTBweDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyO1xuICBwYWRkaW5nOiAyMHB4O1xufVxuXG5wIHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbn1cblxuLnJlcXVpcmVkOmFmdGVyIHtcbiAgY29udGVudDogXCIgKlwiO1xuICBjb2xvcjogcmVkO1xufVxuXG5sYWJlbCB7XG4gIGZvbnQtZmFtaWx5OiBHZW9yZ2lhLCBcIlRpbWVzIE5ldyBSb21hblwiLCBUaW1lcywgc2VyaWY7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgY29sb3I6ICMzMzM7XG4gIGhlaWdodDogMjBweDtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgY2xlYXI6IGJvdGg7XG4gIGZsb2F0OiBsZWZ0O1xuICBtYXJnaW4tcmlnaHQ6IDE1cHg7XG59XG5cbmlucHV0IHtcbiAgZm9udC1mYW1pbHk6IEdlb3JnaWEsIFwiVGltZXMgTmV3IFJvbWFuXCIsIFRpbWVzLCBzZXJpZjtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBoZWlnaHQ6IDIwcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICMwMDA7XG4gIGZsb2F0OiBsZWZ0O1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuXG5pbnB1dFt0eXBlPXRleHRdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgcGFkZGluZzogMC41cmVtO1xuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICB3aWR0aDogNTAlO1xufVxuXG5pbnB1dCB7XG4gIGJvcmRlcjogMDtcbn1cblxuLmZvcm1TZWN0aW9ucyB7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XG59XG5cbi5zdWJtaXRCdXR0b24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTk3NmQyOyAvKiBHcmVlbiAqL1xuICBib3JkZXI6IG5vbmU7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZzogMTVweCAzMnB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBmb250LXNpemU6IDE2cHg7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG59XG5cbi5jb2wtMjUge1xuICBmbG9hdDogbGVmdDtcbiAgd2lkdGg6IDI1JTtcbiAgbWFyZ2luLXRvcDogNnB4O1xufVxuXG4uY29sLTc1IHtcbiAgZmxvYXQ6IGxlZnQ7XG4gIHdpZHRoOiA3NSU7XG4gIG1hcmdpbi10b3A6IDZweDtcbn1cblxuLyogQ2xlYXIgZmxvYXRzIGFmdGVyIHRoZSBjb2x1bW5zICovXG4ucm93OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgZGlzcGxheTogdGFibGU7XG4gIGNsZWFyOiBib3RoO1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["FormGroup","FormControl","Validators","i0","ContactFormComponent","constructor","name","email","phone","company","business","ngOnInit","contactForm","contactdetails","required","minLength","get","onSubmit","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/monarideout/Projects/Angular/Examples/hfassesment/hf-contact-form/src/app/components/contact-form/contact-form.component.ts","/Users/monarideout/Projects/Angular/Examples/hfassesment/hf-contact-form/src/app/components/contact-form/contact-form.component.html"],"sourcesContent":["import { Component,OnInit } from '@angular/core';\nimport { FormArray,FormGroup,FormControl,Validators,FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-contact-form',\n  templateUrl: './contact-form.component.html',\n  styleUrls: ['./contact-form.component.scss']\n})\nexport class ContactFormComponent implements OnInit{\n \n\n  contactForm!: FormGroup;\n  emailValidation: boolean = true;\n  phoneValidation: boolean = true;\n  contactdetails = {\n    name: '',\n    email: '',\n    phone: '',\n    company: '',\n    business: '',\n  };\n  ngOnInit(): void {\n    this.contactForm = new FormGroup({\n      name: new FormControl(this.contactdetails.name, [\n        Validators.required,\n        Validators.minLength(4),\n      ]),\n      email: new FormControl(this.contactdetails.email, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.minLength(64),\n      ]),\n      phone: new FormControl(this.contactdetails.phone, [\n        Validators.required,\n        Validators.minLength(10),\n        Validators.minLength(12),\n      ]),\n      company: new FormControl(this.contactdetails.company, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.minLength(50),\n      ]),\n      business: new FormControl(this.contactdetails.business, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.minLength(50),\n      ]),\n    });\n  }\n  get name() {\n    return this.contactForm.get('name');\n  }\n  get phone() {\n    return this.contactForm.get('phone');\n  }\n  get email() {\n    return this.contactForm.get('email');\n  }\n  get company() {\n    return this.contactForm.get('company');\n  }\n  get business() {\n    return this.contactForm.get('business');\n  }\n  onSubmit(): void {\n    console.log('Submitted!');\n  }\n}\n","<form [formGroup]=\"contactForm\" (ngSubmit)=\"onSubmit()\">\n\n    <div class=\"container\">\n        <h1>How can we help?</h1>\n        <div class=\"row\">\n            <div class=\"col-sm\">\n                <label for=\"name\" class=\"required\">Name:</label>\n                <input type=\"text\" class=\"form-control\" [class.is-invalid] = \"contactForm!.get('name')!.invalid && contactForm!.get('name')!.touched\"  formControlName=\"name\" />\n                <div *ngIf=\"(contactForm!.get('name')!.invalid && contactForm!.get('name')!.touched) || contactForm!.get('name')!.dirty\">\n                    <small *ngIf=\"contactForm!.get('name')!.errors?.['required']\" class=\"alert\">Name is required</small>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm\">\n                <label for=\"email\" class=\"required\">Email:</label>\n                <input type=\"text\" class=\"form-control\"  [class.is-invalid] = \"contactForm!.get('email')!.invalid && contactForm!.get('email')!.touched\" formControlName=\"email\" [email]=\"emailValidation\" />\n                <div *ngIf=\"(contactForm!.get('email')!.invalid && contactForm!.get('email')!.touched) || contactForm!.get('email')!.dirty\">\n                    <small class=\"text-danger\" *ngIf=\"contactForm!.get('email')!.errors?.['required']\">Email address is required</small>\n                    <small class=\"text-danger\" *ngIf=\"contactForm!.get('email')!.errors?.['email']\">Email address is invalid</small>\n                </div>\n            </div>\n            <div class=\"col-25\"><label for=\"phone\" class=\"required\">\n                Phone:</label>\n            </div>\n            <div class=\"col-25\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"phone\" name=\"phone\" required/>\n                <div *ngIf=\"(contactForm!.get('phone')!.invalid && contactForm!.get('phone')!.touched) || contactForm!.get('phone')!.dirty\">\n                    <small class=\"text-danger\" *ngIf=\"contactForm!.get('phone')!.errors?.['required']\">Phone Number is required</small>\n                    <div *ngIf=\"contactForm!.get('phone')!.errors?.['pattern']\">Please, Enter 10 digit Phone Number.</div>  \n                </div>  \n            </div>\n        </div>\n        <div class=\"row\">\n            <label for=\"company\" class=\"required\">Company Name:</label>\n            <input type=\"text\"  class=\"form-control\" formControlName=\"company\" name=\"company\" required/>\n        </div>\n        <div class=\"row\">\n            <label for=\"business\" class=\"required\">Type of Business:</label>\n            <input type=\"text\"  class=\"form-control\" formControlName=\"business\" name=\"business\" required/>\n        </div>\n    </div>\n</form>\n\n<button type=\"submit\" class=\"submitButton\" [disabled]=\"!contactForm.valid\" (click)=\"onSubmit()\">GET IN TOUCH</button>\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}