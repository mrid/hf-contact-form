{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction ContactFormComponent_div_10_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 10);\n    i0.ɵɵtext(1, \"Email address is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactFormComponent_div_10_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 10);\n    i0.ɵɵtext(1, \"Email address is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactFormComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ContactFormComponent_div_10_small_1_Template, 2, 0, \"small\", 9);\n    i0.ɵɵtemplate(2, ContactFormComponent_div_10_small_2_Template, 2, 0, \"small\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.contactForm.get(\"email\").errors == null ? null : ctx_r0.contactForm.get(\"email\").errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.contactForm.get(\"email\").errors == null ? null : ctx_r0.contactForm.get(\"email\").errors.email);\n  }\n}\nexport class ContactFormComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.contactForm = this.fb.group({\n      name: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    // TODO: Use EventEmitter with form value\n    console.warn(this.contactForm.value);\n  }\n}\nContactFormComponent.ɵfac = function ContactFormComponent_Factory(t) {\n  return new (t || ContactFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nContactFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ContactFormComponent,\n  selectors: [[\"app-contact-form\"]],\n  decls: 18,\n  vars: 6,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"container\"], [\"for\", \"name\", 1, \"required\"], [\"id\", \"name\", \"type\", \"text\", \"formControlName\", \"name\", \"required\", \"\"], [\"for\", \"email\", 1, \"required\"], [\"type\", \"email\", \"formControlName\", \"email\", 1, \"form-control\", 3, \"email\"], [4, \"ngIf\"], [\"type\", \"submit\", 3, \"disabled\"], [\"type\", \"button\", 3, \"click\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"text-danger\"]],\n  template: function ContactFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ContactFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"h1\");\n      i0.ɵɵtext(3, \"How can we help?\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"label\", 2);\n      i0.ɵɵtext(5, \"Name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 3);\n      i0.ɵɵelementStart(7, \"label\", 4);\n      i0.ɵɵtext(8, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 5);\n      i0.ɵɵtemplate(10, ContactFormComponent_div_10_Template, 3, 2, \"div\", 6);\n      i0.ɵɵelementStart(11, \"button\", 7);\n      i0.ɵɵtext(12, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"p\");\n      i0.ɵɵtext(14, \"Complete the form to enable button.\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(15, \"hr\");\n      i0.ɵɵelementStart(16, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function ContactFormComponent_Template_button_click_16_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(17, \"GetIn Touch\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.contactForm);\n      i0.ɵɵadvance(9);\n      i0.ɵɵclassProp(\"is-invalid\", ctx.contactForm.get(\"email\").invalid && ctx.contactForm.get(\"email\").touched);\n      i0.ɵɵproperty(\"email\", ctx.emailValidation);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.contactForm.get(\"email\").invalid && ctx.contactForm.get(\"email\").touched || ctx.contactForm.get(\"email\").dirty);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.contactForm.valid);\n    }\n  },\n  dependencies: [i2.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.EmailValidator, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,UAAU,QAAQ,gBAAgB;;;;;;ICUrCC,iCAA6E;IAAAA,yCAAyB;IAAAA,iBAAQ;;;;;IAC9GA,iCAA0E;IAAAA,wCAAwB;IAAAA,iBAAQ;;;;;IAF5GA,2BAAsH;IACpHA,gFAA8G;IAC9GA,gFAA0G;IAC5GA,iBAAM;;;;IAFwBA,eAA+C;IAA/CA,8HAA+C;IAC/CA,eAA4C;IAA5CA,2HAA4C;;;ADH9E,OAAM,MAAOC,oBAAoB;EAC/BC,YAAoBC,EAAe;IAAf,OAAE,GAAFA,EAAE;IAEtB,gBAAW,GAAG,IAAI,CAACA,EAAE,CAACC,KAAK,CAAC;MAC1BC,IAAI,EAAE,CAAC,EAAE,EAAEN,UAAU,CAACO,QAAQ;KAC/B,CAAC;EAJqC;EAMvCC,QAAQ;IACN;IACAC,OAAO,CAACC,IAAI,CAAC,IAAI,CAACC,WAAW,CAACC,KAAK,CAAC;EACtC;;AAVWV,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVjChB,+BAAwD;MAAxBA;QAAA,OAAYiB,cAAU;MAAA,EAAC;MAEnDjB,8BAAuB;MACjBA,gCAAgB;MAAAA,iBAAK;MAG3BA,gCAAmC;MAAAA,sBAAM;MAAAA,iBAAQ;MACjDA,2BAA6D;MAE7DA,gCAAoC;MAAAA,sBAAM;MAAAA,iBAAQ;MAClDA,2BAA2L;MAC3LA,uEAGM;MAENA,kCAAsD;MAAAA,uBAAM;MAAAA,iBAAS;MACrEA,0BAAG;MAAAA,oDAAmC;MAAAA,iBAAI;MAG9CA,sBAAI;MAGJA,kCAA2C;MAArBA;QAAA,OAASiB,cAAU;MAAA,EAAC;MAACjB,4BAAW;MAAAA,iBAAS;;;MAvBzDA,2CAAyB;MAUNA,eAA2F;MAA3FA,0GAA2F;MAA+CA,2CAAyB;MAClLA,eAA8G;MAA9GA,yIAA8G;MAK9FA,eAA+B;MAA/BA,iDAA+B","names":["Validators","i0","ContactFormComponent","constructor","fb","group","name","required","onSubmit","console","warn","contactForm","value","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/monarideout/Projects/Angular/Examples/hfassesment/hf-contact-form/src/app/components/contact-form/contact-form.component.ts","/Users/monarideout/Projects/Angular/Examples/hfassesment/hf-contact-form/src/app/components/contact-form/contact-form.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { FormArray } from '@angular/forms';\n\n@Component({\n  selector: 'app-contact-form',\n  templateUrl: './contact-form.component.html',\n  styleUrls: ['./contact-form.component.scss']\n})\nexport class ContactFormComponent {\n  constructor(private fb: FormBuilder) { }\n\n  contactForm = this.fb.group({\n    name: ['', Validators.required],\n  });\n\n  onSubmit() {\n    // TODO: Use EventEmitter with form value\n    console.warn(this.contactForm.value);\n  }\n}\n","<form [formGroup]=\"contactForm\" (ngSubmit)=\"onSubmit()\">\n\n    <div class=\"container\">\n      <h1>How can we help?</h1>\n    </div>\n\n    <label for=\"name\" class=\"required\">Name: </label>\n    <input id=\"name\" type=\"text\" formControlName=\"name\" required>\n\n    <label for=\"email\" class=\"required\">Email:</label>\n    <input type=\"email\"  [class.is-invalid] = \"contactForm.get('email').invalid && contactForm.get('email').touched\"  class=\"form-control\" formControlName=\"email\" [email]=\"emailValidation\" />\n    <div *ngIf=\"(contactForm.get('email').invalid && contactForm.get('email').touched) || contactForm.get('email').dirty\">\n      <small class=\"text-danger\" *ngIf=\"contactForm.get('email').errors?.required\">Email address is required</small>\n      <small class=\"text-danger\" *ngIf=\"contactForm.get('email').errors?.email\">Email address is invalid</small>\n    </div>\n    \n    <button type=\"submit\" [disabled]=\"!contactForm.valid\">Submit</button>\n    <p>Complete the form to enable button.</p>\n</form>\n\n<hr>\n\n\n<button type=\"button\" (click)=\"onSubmit()\">GetIn Touch</button>\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}